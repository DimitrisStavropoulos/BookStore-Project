@model Store01.ViewModels.BasketViewModel

@{
    ViewBag.Title = "Your Cart";
}

<h2>@ViewBag.Title</h2>
@if (Model.BasketLines.Count() > 0)
{
    <div>
        @using (Html.BeginForm("UpdateBasket", "Basket"))
        {
            @Html.AntiForgeryToken();
            <input class="btn btn-sm btn-success" type="submit" value="Update Cart" />
            <hr />
            <div class="row">
                <div class="col-md-4"><label>Item</label></div>
                <div class="col-md-3"><label>Quantity</label></div>
                <div class="col-md-1"><label>Price</label></div>
                <div class="col-md-1"><label>Subtotal</label></div>
            </div>
            <hr />
            for (int i = 0; i < Model.BasketLines.Count; i++)
            {
                <div class="row">
                    <div class="col-md-4">
                        @Html.ActionLink(Model.BasketLines[i].Book.Title, "Details", "Books",
                          new { id = Model.BasketLines[i].BookID }, null)<br />
                        @if (Model.BasketLines[i].Book.BookImageMappings != null && Model.BasketLines[i].Book.BookImageMappings.Any())
                        {
                            <a href="@Url.Action("Details","Books", new { id = Model.BasketLines[i].BookID})">
                                <img src="@(Url.Content(Constants.BookThumbnailPath) +
                Model.BasketLines[i].Book.BookImageMappings.OrderBy(c=>c.ImageNumber).ElementAt(0).BookImage.FileName)">
                            </a>
                        }
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(productID => Model.BasketLines[i].BookID)
                        @Html.TextBoxFor(quantity => Model.BasketLines[i].Quantity)
                        <p>
                            @Html.ValidationMessageFor(quantity => Model.BasketLines[i].Quantity,
                        "", new { @class = "text-danger" })
                        </p>
                    </div>
                    <div class="col-md-1">@((Model.BasketLines[i].Book.Price).ToString()) €</div>
                    <div class="col-md-1">@((Model.BasketLines[i].Quantity * Model.BasketLines[i].Book.Price).ToString()) €</div>
                    <div class="col-md-1">
                        @Html.ActionLink("Remove", "RemoveLine", "Basket", new
                        { id = Model.BasketLines[i].Book.Id }, null)
                    </div>
                </div>
                <hr />
            }
        }
        <div class="row">
            <div class="col-md-8">
                @Html.DisplayNameFor(model => model.TotalCost)
            </div>
            <div class="col-md-1">
                @Html.DisplayFor(model => model.TotalCost)
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Order Now", "Review", "Orders", null, new { @class = "btn btn-sm btn-success" })
            </div>
        </div>
    </div>
}
else
{
    <p>Your Cart is empty</p>
}
<div>
    @Html.ActionLink("Continue Shopping", "Index", "Books")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
